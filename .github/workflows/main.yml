name: DV FE Build and Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # Builds artifact
  build:
    name: Build and Test

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 12.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Remove existing dist
        run: rm -rf build/

      - name: Installing NPM
        run: npm install

      - name: Run Tests
        run: npm run test


  #Deploy's job
  DeployDev:
    #Depends on build's job
    needs: build
    name: Deploy Develop
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}

    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    env:
      PUSH_PACKAGES: ${{ github.event_name == 'push' && github.ref == 'refs/heads/develop' }}

    strategy:
      matrix:
        node-version: [ 12.x ]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Remove existing dist
        run: rm -rf build/

      - name: Installing NPM
        run: npm install

      - name: Run env Dev
        run: npm run env_dev

      - name: Bundle Application
        run: npm run bundle

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy to S3
        if: ${{ env.PUSH_PACKAGES }}
        run: aws s3 sync ${{ secrets.SOURCE }} s3://${{ secrets.BUCKET_DEV }} --delete

  DeployProd:
    #Depends on build's job
    needs: build
    name: Deploy Prod
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

    #Run on Ubuntu using the latest version
    runs-on: ubuntu-latest
    env:
      PUSH_PACKAGES: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Remove existing dist
        run: rm -rf build/

      - name: Installing NPM
        run: npm install

      - name: Run env Prod
        run: npm run env_prod

      - name: Bundle Application
        run: npm run bundle

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Deploy to S3
        if: ${{ env.PUSH_PACKAGES }}
        run: aws s3 sync ${{ secrets.SOURCE }} s3://${{ secrets.BUCKET_PROD }} --delete